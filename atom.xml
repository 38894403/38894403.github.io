<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Welcome</title>
  <subtitle>简单不先于复杂，而是在复杂之后</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-02-24T12:45:30.500Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>张策</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Node中的url模块</title>
    <link href="http://yoursite.com/2016/12/06/Node%E4%B8%AD%E7%9A%84url%E6%A8%A1%E5%9D%97/"/>
    <id>http://yoursite.com/2016/12/06/Node中的url模块/</id>
    <published>2016-12-06T03:23:51.000Z</published>
    <updated>2017-02-24T12:45:30.500Z</updated>
    
    <content type="html"><![CDATA[<pre><code>在使用node时，通常需要使用一些第三方包，其实node有一些核心模块可以直接使用。
</code></pre><h2 id="node的核心模块"><a href="#node的核心模块" class="headerlink" title="node的核心模块"></a>node的核心模块</h2><p>node 的核心模块<br>path：处理文件路径。<br>fs：操作文件系统。<br>child_process：新建子进程。<br>util：提供一系列实用小工具。<br>http：提供HTTP服务器功能。<br>url：用于解析URL。<br>querystring：解析URL中的查询字符串。<br>crypto：提供加密和解密功能。<br>其他</p>
<h2 id="url模块"><a href="#url模块" class="headerlink" title="url模块"></a>url模块</h2><h3 id="url模块的三种方法"><a href="#url模块的三种方法" class="headerlink" title="url模块的三种方法"></a>url模块的三种方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">1.url.parse(str,<span class="literal">true</span>) //将字符串转成对象,第二个参数默认为<span class="literal">false</span>，为<span class="literal">true</span>时，返回的url对象中，query的属性为一个对象。</div><div class="line">2.url.format(urlObj) //用于将对象转成字符串</div><div class="line">3.url.resolve(from,to)</div><div class="line">	url.resolve(<span class="string">"http://whitemu.com"</span>,<span class="string">"gulu"</span>);</div><div class="line">	/*</div><div class="line">	返回值：</div><div class="line">	<span class="string">'http://whitemu.com/gulu'</span></div><div class="line">	*/</div></pre></td></tr></table></figure>
<h3 id="url使用"><a href="#url使用" class="headerlink" title="url使用"></a>url使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">var url = require(<span class="string">'url'</span>);</div><div class="line">var str = <span class="string">'http://poiu:123@127.0.0.1:3000/?name=tom#a'</span>;</div><div class="line">var urlObj = url.parse(str,<span class="literal">true</span>); </div><div class="line">console.log(urlObj);</div><div class="line">/*</div><div class="line"> protocol: <span class="string">'http:'</span>, 协议</div><div class="line"> slashes: <span class="literal">true</span>, 是否有//</div><div class="line"> auth: <span class="string">'poiu:123'</span>, 用户名和密码</div><div class="line"> host: <span class="string">'127.0.0.1:3000'</span>, 主机</div><div class="line"> port: <span class="string">'3000'</span>, 端口</div><div class="line"> hostname: <span class="string">'127.0.0.1'</span>,域名/IP地址</div><div class="line"> <span class="built_in">hash</span>: <span class="string">'#a'</span>, 片断标识符 指向HTML页面某个DOM元素的ID</div><div class="line"> search: <span class="string">'?name=tom'</span>, ?+查询字符串</div><div class="line"> query: &#123;name:<span class="string">'tom'</span>&#125;,查询字符串</div><div class="line"> pathname: <span class="string">'/'</span>, 端口号和？中间的那部分</div><div class="line"> path: <span class="string">'/2016jsnode?name=tom'</span>, pathname+search</div><div class="line"> href: <span class="string">'http://poiu:123@127.0.0.1:3000/?name=tom#a'</span> 原始的URL</div><div class="line"> */</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;在使用node时，通常需要使用一些第三方包，其实node有一些核心模块可以直接使用。
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;node的核心模块&quot;&gt;&lt;a href=&quot;#node的核心模块&quot; class=&quot;headerlink&quot; title=&quot;node的核心
    
    </summary>
    
      <category term="Node.js" scheme="http://yoursite.com/categories/Node-js/"/>
    
    
      <category term="Node.js" scheme="http://yoursite.com/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Github访问慢的问题</title>
    <link href="http://yoursite.com/2016/06/23/Github%E8%AE%BF%E9%97%AE%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2016/06/23/Github访问慢的问题/</id>
    <published>2016-06-23T06:54:12.000Z</published>
    <updated>2017-02-24T12:59:14.029Z</updated>
    
    <content type="html"><![CDATA[<p>有时候访问Github会加载很长时间，或者干脆css样式加载不出来，网上看了几篇文章，统一的解释是github的CDN被污染了(毕竟是国外网站，出点问题很正常)</p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p> 有vpn服务的可以直接使用vpn，没有vpn的，可以绕过dns解析，在本地直接绑定host。打开dns查询工具网站<br> <a href="http://tool.chinaz.com/dns " target="_blank" rel="external">http://tool.chinaz.com/dns </a><br> 输入github的官网，会查询出该域名的解析<br> 选取一个TTL值最小的ip，直接绑定到hosts文件便可解决，比如我选择192.30.253.113，TTL值为22</p>
<p> 在hosts文件末尾添加<br> 103.245.222.249 github.global.ssl.fastly.net<br> 103.245.222.133 assets-cdn.github.com</p>
<p> 然后再访问Github,问题解决</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有时候访问Github会加载很长时间，或者干脆css样式加载不出来，网上看了几篇文章，统一的解释是github的CDN被污染了(毕竟是国外网站，出点问题很正常)&lt;/p&gt;
&lt;h3 id=&quot;解决办法&quot;&gt;&lt;a href=&quot;#解决办法&quot; class=&quot;headerlink&quot; tit
    
    </summary>
    
      <category term="网络问题" scheme="http://yoursite.com/categories/%E7%BD%91%E7%BB%9C%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="网络问题" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
</feed>
